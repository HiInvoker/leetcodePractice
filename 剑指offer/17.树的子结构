17.树的子结构

输入两棵二叉树A，B，判断B是不是A的子结构。
（ps：我们约定空树不是任意一个树的子结构）

# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def HasSubtree(self, pRoot1, pRoot2):
        # write code here

        if not pRoot1 or not pRoot2:
            return False
        else:
            return self.isSub(pRoot1, pRoot2) or self.HasSubtree(pRoot1.left, pRoot2) or self.HasSubtree(pRoot1.right, pRoot2)

    def isSub(self, a, b):
        if not b:
            return True
        elif not a or (a.val != b.val):
            return False
        else:
            return self.isSub(a.left, b.left) and self.isSub(a.right, b.right)
