38.二叉树的深度

输入一棵二叉树，求该树的深度。从根结点到叶结点依次经过的结点（含根、叶结点）形成树的一条路径，最长路径的长度为树的深度。

#递归：
# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def TreeDepth(self, pRoot):
        # write code here

        if not pRoot:
            return 0
        else:
            return 1+max(self.TreeDepth(pRoot.left), self.TreeDepth(pRoot.right))

#层序遍历
# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def TreeDepth(self, pRoot):
        # write code here

        if not pRoot:
            return 0
        else:
            count = 0
            queue = [pRoot]

            while queue:
                old, queue = queue, []
                for i in old:
                    if i.left:
                        queue.append(i.left)
                    if i.right:
                        queue.append(i.right)
                count += 1
            return count
