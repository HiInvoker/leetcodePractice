Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].


class Solution:
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        head = 0
        tail = len(nums) -1
        sumN = 0

        while (head < tail):
            sumN = nums[head] + nums[tail]
            if (sumN < target):
                head += 1
            elif (sumN == target):
                return (head, tail)
            else:
                tail -= 1

######如果输入的数组不是顺序的话，那就要用哈希表了（python里面的dict）

class Solution:
    def twoSum(self, nums, target):
        if len(nums) <= 1:
            return False
        else:
            dict = {}
            for i in range(len(nums)):
                if nums[i] in dict:
                    return [dict[nums[i]], i]
                else:
                    dict[target - nums[i]] = i


def stringToIntegerList(input):
    return json.loads(input)

def integerListToString(nums, len_of_list=None):
    if not len_of_list:
        len_of_list = len(nums)
    return json.dumps(nums[:len_of_list])

def main():
    import sys
    import io
    def readlines():
        for line in io.TextIOWrapper(sys.stdin.buffer, encoding='utf-8'):
            yield line.strip('\n')

    lines = readlines()
    while True:
        try:
            line = next(lines)
            nums = stringToIntegerList(line);
            line = next(lines)
            target = int(line);

            ret = Solution().twoSum(nums, target)

            out = integerListToString(ret);
            print(out)
        except StopIteration:
            break

if __name__ == '__main__':
    main()
