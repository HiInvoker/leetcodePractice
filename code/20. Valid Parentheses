Input: "()[]{}"
Output: true

Input: "{[]}"
Output: true

Input: "([)]"
Output: false

通过Stack 先进后出的性质，如果是

左括号，放入Stack。
右括号，则将其与最后一个放入Stack的左括号比对，看看他们是否是一个Pair，结束后将Stack里的左括后pop掉。
(p.s. 存储对应Pair 的Mapping就用字典即可) 还要主要到如 ']{}'. '((' 这种输入，所以要注意stack里面的元素数量，如果第一个
是右边的符号，那么stack的长度就是0的，如果全是左边的符号，那么stack长度就大于0

class Solution:
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        #'(', ')', '{', '}', '[' and ']'

        wdict = {'(' : ')', '{' : '}', '[' : ']' }

        l = []
        if len(s)%2 == 1:
            return False
        else:
            for char in s:
                if char in wdict:
                    l.append(wdict[char])
                else:
                    if len(l) > 0:
                        if char != l.pop():
                            return False
                    else:
                        return False
            if len(l) > 0:
                return False
            else:
                return True
